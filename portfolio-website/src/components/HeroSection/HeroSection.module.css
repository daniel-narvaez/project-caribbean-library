/**
* HeroSection.module.css
* =====================
* 
* Overview:
* Styles for the portfolio's hero section, featuring a responsive layout,
* interactive CTA buttons, and dynamic sizing based on viewport dimensions.
* Implements a fully responsive design that adapts between landscape and
* portrait orientations.
* 
* Design System Integration:
* - Uses CSS variables for consistent theming
* - Implements fluid typography with viewport units
* - Maintains consistent spacing ratios
* - Handles interactive states with smooth transitions
* 
* Key Features:
* - Fluid responsive layout
* - Viewport-based typography
* - Interactive button variants
* - Orientation-specific layouts
* - Consistent spacing system
* 
* Dependencies:
* CSS Variables (defined in root):
* --color-link: Primary button color
* --color-link-hover: Button hover state
* --color-link-active: Button active state
* --color-bg1: Base background
* --font-baskervville: Typography
* --menuControl-hover: Transition timing
* --menuControl-active: Active state timing
*/

/* Root Variables */
:root {
  --bg-heroSection: linear-gradient(var(--color-bg1-hover), var(--color-bg1-active));
}

/**
* Main Layout
* ----------
* Full-viewport hero section with flexible spacing
*/
.heroSection {
  display: flex;
  width: 100%;
  min-height: 100vh;
  padding: 5rem 5.55vw;
  justify-content: center;
  /* background-image: var(--bg-heroSection); */
}

/**
* Hero Container
* -------------
* Constrains width and maintains padding
*/
.heroContainer {
  display: flex;
  width: 100%;
  max-width: 80rem; /* 1280px */
  gap: 5%;
  align-items: center;
}

/**
* Content Area
* -----------
* Left-side content with vertical rhythm
*/
.heroContent {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 1.5rem; /* 24px = 1280px * 1.875% */
  width: calc(50% - 2.5%); /* Half the container minus half the gap */
}

/**
* Media Container
* --------------
* Right-side media with depth effect
*/
.heroMedia {
  display: flex;
  width: calc(50% - 2.5%); /* Half the container minus half the gap */
  /* aspect-ratio: 4/3; */
  object-fit: contain;
}

/**
* Typography
* ---------
* Fluid sizing based on viewport width
*/
.headline {
  font-family: var(--font-libreBaskerville);
  font-size: var(--hero-headline-size);
  text-transform: capitalize;
}

.tagline {
  font-size: var(--hero-tagline-size);
  line-height: normal;
}

/**
* CTA Menu
* --------
* Button container with consistent spacing
*/
.ctaMenu {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.ctaMenu .heroButton {
  padding: 0.75rem 1.5rem;
  font-size: var(--hero-cta-button-size);
}

.ctaMenu .heroButton::before {
  border-radius: 0.25rem;
}

/**
* Responsive Design
* ---------------
* Portrait orientation adjustments
* Changes unit basis from vw to vh for appropriate scaling
*/
@media (max-aspect-ratio: 1/1) {
  .heroSection {
    width: 100%;
    min-height: 100vh;
    justify-content: center;
    padding: 4rem 5.55vw;
  }
  
  /**
  * Hero Container
  * -------------
  * Constrains width and maintains padding
  */
  .heroContainer {
    display: flex;
    flex-direction: column-reverse;
    justify-content: center;
    width: 100%;
    max-width: 40rem; /* 640px */
    gap: 5%;
    align-items: center;
  }

  /* Center alignment for portrait view */
  .heroContent {
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    gap: 1rem;
  }

  .heroMedia {
    width: 100%;
  }

  /* Adjusted typography for portrait orientation */
  .headline {
    text-align: center;
  }

  .heroContent .tagline {
    text-align: center;
  }

  .ctaMenu {
    flex-direction: column;
    gap: 0.5rem;
  }

  .heroButton {
    padding: 0.5rem 1rem;

    &::before {
      border-width: var(--number-cornerRadius);
      border-radius: var(--number-cornerRadius); 
    }

  }

  main > .heroMedia {
    filter: drop-shadow(0 0.25rem 0.5rem rgba(0, 0, 0, 0.25));
  }
}