/**
* Slideshow.module.css
* ===================
* 
* Overview:
* Styles for the Slideshow component, handling 3D transforms, transitions,
* and animation states. Optimized for performance with GPU acceleration
* and efficient DOM updates.
* 
* Structure:
* - Hierarchical container system for 3D space
* - Hardware-accelerated animations
* - Responsive sizing with relative units
* - Performance optimizations for smooth transitions
* 
* Performance Features:
* - GPU acceleration via transform properties
* - Optimized paint and composite operations
* - Reduced layout thrashing
* - Memory efficient transitions
* 
* Browser Considerations:
* - Uses modern CSS properties with wide support
* - GPU acceleration fallbacks included
* - Handles various aspect ratios
*/

/* 
* Primary Container
* ----------------
* Establishes 3D space and perspective for child elements
*/
.slidesContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  align-items: center;
  gap: 1.5rem;
}
 
 /* 
 * Media Container
 * --------------
 * Handles 3D transformations and maintains GPU acceleration
 * - preserve-3d enables 3D space for nested elements
 * - will-change optimizes for transform animations
 * - backface-visibility prevents visual artifacts
 */
 .mediaContainer {
  position: relative;
  width: 100%;
  height: max-content;
  transform-style: preserve-3d;
  transition: transform 200ms ease-out;
  will-change: transform;
  overflow: hidden;
  border-radius: 0.5rem;
  box-shadow: var(--fx-boxShadow1);
}
 
 .mediaContainer:hover {
  cursor: pointer;
 }
 
 /* 
 * Media Wrapper
 * ------------
 * Handles clip-path animations and ensures smooth transitions
 * - GPU acceleration via transform and backface visibility
 * - Maintains composite-only animations for performance
 */
 .mediaWrapper {
  display: flex;
  position: relative;
  align-items: center;
  will-change: clip-path; /* Optimizes for clip-path animations */
 }
 
 /* 
 * Transition State
 * ---------------
 * Applies smooth easing to clip-path animations
 */
 .mediaWrapper.transitioning {
  transition: clip-path 1s cubic-bezier(0.4, 0, 0.2, 1);
 }
 
 /* 
 * Media Content
 * ------------
 * Styles for actual media elements (images/videos)
 * - object-fit maintains aspect ratio
 * - GPU acceleration for smooth scaling
 */
 .mediaContent {
  position: relative;
  width: 100%;
 }
 
 /* 
 * State Containers
 * ---------------
 * Handles loading and error states with consistent styling
 * - Maintains layout during state changes
 * - Semi-transparent background for readability
 */
 .loadingState,
 .errorState {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 0.5rem;
 }

 .controlPanel {
  /* position: absolute; */
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  width: max-content;
  border-radius: var(--number-cornerRadius);
  background: var(--color-bg1-hover);
  box-shadow: var(--fx-boxShadow1);
  z-index: 50;
}

.slideIndicator {
  width: 1rem;
  height: 1rem;
  border-radius: var(--number-cornerRadius);
  border: var(--number-cornerRadius) solid var(--color-action);
  background: transparent;
  cursor: pointer;
  padding: 0;
  transition: var(--menuControl-hover);
  transform: scale(100%)
}

.slideIndicator:hover:not(:disabled) {
  border-color: var(--color-action-hover);
  background-color: var(--color-action-hover);
}

.slideIndicator:active:not(:disabled) {
  transition: var(--menuControl-active);

  border-color: var(--color-action-active);
  background-color: var(--color-action-active);
  transform: scale(92%)
}

.slideIndicator.active {
  border-color: var(--color-action);
  background-color: var(--color-action-active);
}

.slideIndicator:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}