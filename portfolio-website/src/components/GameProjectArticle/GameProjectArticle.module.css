:root {
  --bg-cardContent: linear-gradient(
    180deg, 
    rgba(236, 233, 228, 0.00) 0%, 
    rgba(236, 233, 228, 0.33) 50%, 
    rgba(236, 233, 228, 1.00) 100%
  );

  --bg-cardContent-hover: linear-gradient(
    180deg, 
    rgba(247, 245, 242, 0.00) 0%, 
    rgba(247, 245, 242, 0.50) 50%, 
    rgba(247, 245, 242, 1.00) 100%
  );
}

.gameProjectArticle.desktopCard,
.gameProjectArticle.mobileCard {
  display: flex;
  width: var(--card-width); 
  height: var(--card-height);
  flex-direction: column;
  justify-content: flex-end;
  position: relative;
  /* flex-shrink: 0; */
  border-radius: var(--number-cornerRadius);
  box-shadow: var(--fx-cardShadow);
  overflow: hidden;
}

.gameProjectArticle.mobileBanner {
  display: flex;
  width: 43.75rem;
  height: 18.75rem;
  flex-direction: column;
  justify-content: flex-end;
  position: relative;
  /* flex-shrink: 0; */
  border-radius: var(--number-cornerRadius);
  box-shadow: var(--fx-cardShadow);
  overflow: hidden;
}

.articleBackground {
  position: absolute;
  z-index: 0;
  width: 110%;
  height: 110%;
  top: -5%;
  left: -5%;
  transition: transform 1400ms cubic-bezier(0.19, 1, 0.22, 1);
}

.articleForeground {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
}

.desktopCard > .articleContent,
.mobileCard > .articleContent {
  display: flex;
  z-index: 2;
  width: 100%;
  height: 50%;
  padding: var(--padding-size);
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  background-image: var(--bg-cardContent);
}

.mobileBanner > .articleContent {
  display: flex;
  z-index: 2;
  width: 100%;
  height: 50%;
  padding: var(--padding-size);
  align-items: flex-end;
  background-image: var(--bg-cardContent);
}

.desktopCard .contentWrapper,
.mobileCard .contentWrapper {
  display: flex;
  z-index: 1;
  flex-direction: column;
  align-items: center;
  gap: var(--gap-size);
  align-self: stretch;
  transition: height 700ms cubic-bezier(0.19, 1, 0.22, 1);
}

.mobileBanner .contentWrapper {
  display: flex;
  z-index: 1;
  justify-content: center;
  align-items: flex-end;
  gap: var(--gap-size);
  transition: height 700ms cubic-bezier(0.19, 1, 0.22, 1);
  flex: 1 0 0;
}

.projectInfo {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--gap-size);
  align-self: stretch;
}

.projectTitle, .projectTagline {
  text-shadow: var(--fx-textShadow);
}

.desktopCard .projectMenu,
.mobileCard .projectMenu {
  display: flex;
  padding-top: var(--padding-size);
  justify-content: flex-end;
  align-items: flex-end;
  gap: calc(var(--gap-size) * 2);
  align-self: stretch;
}

.mobileBanner .projectMenu {
  display: flex;
  padding-top: var(--padding-size);
  justify-content: flex-end;
  align-items: flex-end;
  gap: calc(var(--gap-size) * 2);
  flex: 1 0 0;
}

.projectButton {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  align-self: stretch;
  z-index: 0; /* Creates stacking context */
  padding: var(--padding-size) calc(var(--padding-size) * 2);
  text-decoration: none;
 }
 
 /**
 * Button Pseudo-element
 * -------------------
 * Handles background and border effects
 */
 .projectButton::before {
  content: '';
  position: absolute;
  inset: 0;
  transform-origin: center;
  z-index: -1;
  border-radius: var(--number-cornerRadius);
  transition: var(--menuControl-hover);
 }
 
 .projectButton span {
  font-family: var(--heading-text);
  font-weight: 400;
  text-align: center;
  text-transform: capitalize;
  transition: var(--menuControl-hover);
 }

 /**
* Solid Button Variant
* ------------------
* Primary action style with filled background
*/
.projectButton.solid::before {
  background-color: var(--color-link);
 }
 
 .projectButton.solid span {
  color: var(--color-bg1);
 }
 
 /* Hover and active states with depth effects */
 .projectButton.solid:hover::before {
  background-color: var(--color-link-hover);
  filter: drop-shadow(0 0.25rem 1rem rgba(0, 0, 0, 0.5));
 }
 
 .projectButton.solid:hover span {
   color: var(--color-bg1-hover);
 }
 
 .projectButton.solid:active::before {
   background-color: var(--color-link-active);
   transform: scale(92%);
   transition: var(--menuControl-active);
   filter: none;
 }
 
 .projectButton.solid:active span {
   color: var(--color-bg1-active);
   transform: scale(92%);
   transition: var(--menuControl-active);
 }
 
 /**
 * Island Button Variant
 * -------------------
 * Secondary action style with border
 */
 .projectButton.island::before {
  border: var(--number-cornerRadius) solid var(--color-link);
 }
 
 .projectButton.island span {
   color: var(--color-link);
 }
  
 /* Hover and active states with depth effects */
 .projectButton.island:hover::before {
   border-color: var(--color-link-hover);
   filter: drop-shadow(0 0.12rem 0.5rem rgba(0, 0, 0, 0.25));
 }
 
 .projectButton.island:hover span{
   color: var(--color-link-hover);
   filter: drop-shadow(0 0.12rem 0.5rem rgba(0, 0, 0, 0.25));
 }
 
 .projectButton.island:active::before {
   border-color: var(--color-link-hover);
   transform: scale(92%);
   transition: var(--menuControl-active);
   filter: none;
 }
 
 .projectButton.island:active span{
   color: var(--color-link-hover);
   transform: scale(92%);
   transition: var(--menuControl-active);
   filter: none;
 }